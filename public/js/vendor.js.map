<<<<<<< HEAD
{"version":3,"sources":["js.cookie.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vendor.js","sourcesContent":["/*!\n * JavaScript Cookie v2.1.2\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\treturn (document.cookie = [\n\t\t\t\t\tkey, '=', value,\n\t\t\t\t\tattributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE\n\t\t\t\t\tattributes.path    && '; path=' + attributes.path,\n\t\t\t\t\tattributes.domain  && '; domain=' + attributes.domain,\n\t\t\t\t\tattributes.secure ? '; secure' : ''\n\t\t\t\t].join(''));\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api(key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n"],"sourceRoot":"/source/"}
=======
{"version":3,"sources":["jquery-ui-slider-pips.js"],"names":[],"mappingsfile":"vendor.js","sourcesContent":["/*! jQuery-ui-Slider-Pips - v1.11.3 - 2016-03-15\n* Copyright (c) 2016 Simon Goellner <simey.me@gmail.com>; Licensed MIT */\n\n/*! jQuery-ui-Slider-Pips - v1.11.1 - 2015-11-30\n* Copyright (c) 2015 Simon Goellner <simey.me@gmail.com>; Licensed MIT */\n\n\n\n(function($) {\n\n    \"use strict\";\n\n    var extensionMethods = {\n\n\n\n\n\n        // pips\n\n        pips: function( settings ) {\n\n            var slider = this,\n                i, j, p,\n                collection = \"\",\n                mousedownHandlers,\n                min = slider._valueMin(),\n                max = slider._valueMax(),\n                pips = ( max - min ) / slider.options.step,\n                $handles = slider.element.find(\".ui-slider-handle\"),\n                $pips;\n\n            var options = {\n\n                first: \"label\",\n                /* \"label\", \"pip\", false */\n\n                last: \"label\",\n                /* \"label\", \"pip\", false */\n\n                rest: \"pip\",\n                /* \"label\", \"pip\", false */\n\n                labels: false,\n                /* [array], { first: \"string\", rest: [array], last: \"string\" }, false */\n\n                prefix: \"\",\n                /* \"\", string */\n\n                suffix: \"\",\n                /* \"\", string */\n\n                step: ( pips > 100 ) ? Math.floor( pips * 0.05 ) : 1,\n                /* number */\n\n                formatLabel: function(value) {\n                    return this.prefix + value + this.suffix;\n                }\n                /* function\n                    must return a value to display in the pip labels */\n\n            };\n\n            if ( $.type( settings ) === \"object\" || $.type( settings ) === \"undefined\" ) {\n\n                $.extend( options, settings );\n                slider.element.data(\"pips-options\", options );\n\n            } else {\n\n                if ( settings === \"destroy\" ) {\n\n                    destroy();\n\n                } else if ( settings === \"refresh\" ) {\n\n                    slider.element.slider( \"pips\", slider.element.data(\"pips-options\") );\n\n                }\n\n                return;\n\n            }\n\n\n            // we don't want the step ever to be a floating point or negative\n            // (or 0 actually, so we'll set it to 1 in that case).\n            slider.options.pipStep = Math.abs( Math.round( options.step ) ) || 1;\n\n            // get rid of all pips that might already exist.\n            slider.element\n                .off( \".selectPip\" )\n                .addClass(\"ui-slider-pips\")\n                .find(\".ui-slider-pip\")\n                .remove();\n\n            // small object with functions for marking pips as selected.\n\n            var selectPip = {\n\n                single: function(value) {\n\n                    this.resetClasses();\n\n                    $pips\n                        .filter(\".ui-slider-pip-\" + this.classLabel(value) )\n                        .addClass(\"ui-slider-pip-selected\");\n\n                    if ( slider.options.range ) {\n\n                        $pips.each(function(k, v) {\n\n                            var pipVal = $(v).children(\".ui-slider-label\").data(\"value\");\n\n                            if (( slider.options.range === \"min\" && pipVal < value ) ||\n                                ( slider.options.range === \"max\" && pipVal > value )) {\n\n                                $(v).addClass(\"ui-slider-pip-inrange\");\n\n                            }\n\n                        });\n\n                    }\n\n                },\n\n                range: function(values) {\n\n                    this.resetClasses();\n\n                    for ( i = 0; i < values.length; i++ ) {\n\n                        $pips\n                            .filter(\".ui-slider-pip-\" + this.classLabel(values[i]) )\n                            .addClass(\"ui-slider-pip-selected-\" + ( i + 1 ) );\n\n                    }\n\n                    if ( slider.options.range ) {\n\n                        $pips.each(function(k, v) {\n\n                            var pipVal = $(v).children(\".ui-slider-label\").data(\"value\");\n\n                            if ( pipVal > values[0] && pipVal < values[1] ) {\n\n                                $(v).addClass(\"ui-slider-pip-inrange\");\n\n                            }\n\n                        });\n\n                    }\n\n                },\n\n                classLabel: function(value) {\n\n                    return value.toString().replace(\".\", \"-\");\n\n                },\n\n                resetClasses: function() {\n\n                    var regex = /(^|\\s*)(ui-slider-pip-selected|ui-slider-pip-inrange)(-{1,2}\\d+|\\s|$)/gi;\n\n                    $pips.removeClass( function(index, css) {\n                        return ( css.match(regex) || [] ).join(\" \");\n                    });\n\n                }\n\n            };\n\n            function getClosestHandle( val ) {\n\n                var h, k,\n                    sliderVals,\n                    comparedVals,\n                    closestVal,\n                    tempHandles = [],\n                    closestHandle = 0;\n\n                if ( slider.values() && slider.values().length ) {\n\n                    // get the current values of the slider handles\n                    sliderVals = slider.values();\n\n                    // find the offset value from the `val` for each\n                    // handle, and store it in a new array\n                    comparedVals = $.map( sliderVals, function(v) {\n                        return Math.abs( v - val );\n                    });\n\n                    // figure out the closest handles to the value\n                    closestVal = Math.min.apply( Math, comparedVals );\n\n                    // if a comparedVal is the closestVal, then\n                    // set the value accordingly, and set the closest handle.\n                    for ( h = 0; h < comparedVals.length; h++ ) {\n                        if ( comparedVals[h] === closestVal ) {\n                            tempHandles.push(h);\n                        }\n                    }\n\n                    // set the closest handle to the first handle in array,\n                    // just incase we have no _lastChangedValue to compare to.\n                    closestHandle = tempHandles[0];\n\n                    // now we want to find out if any of the closest handles were\n                    // the last changed handle, if so we specify that handle to change\n                    for ( k = 0; k < tempHandles.length; k++ ) {\n                        if ( slider._lastChangedValue === tempHandles[k] ) {\n                            closestHandle = tempHandles[k];\n                        }\n                    }\n\n                    if ( slider.options.range && tempHandles.length === 2 ) {\n\n                        if ( val > sliderVals[1] ) {\n\n                            closestHandle = tempHandles[1];\n\n                        } else if ( val < sliderVals[0] ) {\n\n                            closestHandle = tempHandles[0];\n\n                        }\n\n                    }\n\n                }\n\n                return closestHandle;\n\n            }\n\n            function destroy() {\n\n                slider.element\n                    .off(\".selectPip\")\n                    .on(\"mousedown.slider\", slider.element.data(\"mousedown-original\") )\n                    .removeClass(\"ui-slider-pips\")\n                    .find(\".ui-slider-pip\")\n                    .remove();\n\n            }\n\n            // when we click on a label, we want to make sure the\n            // slider's handle actually goes to that label!\n            // so we check all the handles and see which one is closest\n            // to the label we clicked. If 2 handles are equidistant then\n            // we move both of them. We also want to trigger focus on the\n            // handle.\n\n            // without this method the label is just treated like a part\n            // of the slider and there's no accuracy in the selected value\n\n            function labelClick( label, e ) {\n\n                if (slider.option(\"disabled\")) {\n                    return;\n                }\n\n                var val = $(label).data(\"value\"),\n                    indexToChange = getClosestHandle( val );\n\n                if ( slider.values() && slider.values().length ) {\n\n                    slider.options.values[ indexToChange ] = slider._trimAlignValue( val );\n\n                } else {\n\n                    slider.options.value = slider._trimAlignValue( val );\n\n                }\n\n                slider._refreshValue();\n                slider._change( e, indexToChange );\n\n            }\n\n            // method for creating a pip. We loop this for creating all\n            // the pips.\n\n            function createPip( which ) {\n\n                var label,\n                    percent,\n                    number = which,\n                    classes = \"ui-slider-pip\",\n                    css = \"\",\n                    value = slider.value(),\n                    values = slider.values(),\n                    labelValue,\n                    classLabel,\n                    labelIndex;\n\n                if ( which === \"first\" ) {\n\n                    number = 0;\n\n                } else if ( which === \"last\" ) {\n\n                    number = pips;\n\n                }\n\n                // labelValue is the actual value of the pip based on the min/step\n                labelValue = min + ( slider.options.step * number );\n\n                // classLabel replaces any decimals with hyphens\n                classLabel = labelValue.toString().replace(\".\", \"-\");\n\n                // get the index needed for selecting labels out of the array\n                labelIndex = Math.round( ( number - min ) / options.step );\n\n                // we need to set the human-readable label to either the\n                // corresponding element in the array, or the appropriate\n                // item in the object... or an empty string.\n\n                if ( $.type(options.labels) === \"array\" ) {\n\n                    label = options.labels[ labelIndex ] || \"\";\n\n                } else if ( $.type( options.labels ) === \"object\" ) {\n\n                    if ( which === \"first\" ) {\n\n                        // set first label\n                        label = options.labels.first || \"\";\n\n                    } else if ( which === \"last\" ) {\n\n                        // set last label\n                        label = options.labels.last || \"\";\n\n                    } else if ( $.type( options.labels.rest ) === \"array\" ) {\n\n                        // set other labels, but our index should start at -1\n                        // because of the first pip.\n                        label = options.labels.rest[ labelIndex - 1 ] || \"\";\n\n                    } else {\n\n                        // urrggh, the options must be f**ked, just show nothing.\n                        label = labelValue;\n\n                    }\n\n                } else {\n\n                    label = labelValue;\n\n                }\n\n\n\n\n                if ( which === \"first\" ) {\n\n                    // first Pip on the Slider\n                    percent = \"0%\";\n\n                    classes += \" ui-slider-pip-first\";\n                    classes += ( options.first === \"label\" ) ? \" ui-slider-pip-label\" : \"\";\n                    classes += ( options.first === false ) ? \" ui-slider-pip-hide\" : \"\";\n\n                } else if ( which === \"last\" ) {\n\n                    // last Pip on the Slider\n                    percent = \"100%\";\n\n                    classes += \" ui-slider-pip-last\";\n                    classes += ( options.last === \"label\" ) ? \" ui-slider-pip-label\" : \"\";\n                    classes += ( options.last === false ) ? \" ui-slider-pip-hide\" : \"\";\n\n                } else {\n\n                    // all other Pips\n                    percent = (( 100 / pips ) * which ).toFixed(4) + \"%\";\n\n                    classes += ( options.rest === \"label\" ) ? \" ui-slider-pip-label\" : \"\";\n                    classes += ( options.rest === false ) ? \" ui-slider-pip-hide\" : \"\";\n\n                }\n\n                classes += \" ui-slider-pip-\" + classLabel;\n\n\n                // add classes for the initial-selected values.\n                if ( values && values.length ) {\n\n                    for ( i = 0; i < values.length; i++ ) {\n\n                        if ( labelValue === values[i] ) {\n\n                            classes += \" ui-slider-pip-initial-\" + ( i + 1 );\n                            classes += \" ui-slider-pip-selected-\" + ( i + 1 );\n\n                        }\n\n                    }\n\n                    if ( slider.options.range ) {\n\n                        if ( labelValue > values[0] && \n                            labelValue < values[1] ) {\n\n                            classes += \" ui-slider-pip-inrange\";\n\n                        }\n\n                    }\n\n                } else {\n\n                    if ( labelValue === value ) {\n\n                        classes += \" ui-slider-pip-initial\";\n                        classes += \" ui-slider-pip-selected\";\n\n                    }\n\n                    if ( slider.options.range ) {\n\n                        if (( slider.options.range === \"min\" && labelValue < value ) ||\n                            ( slider.options.range === \"max\" && labelValue > value )) {\n\n                            classes += \" ui-slider-pip-inrange\";\n\n                        }\n\n                    }\n\n                }\n\n\n\n                css = ( slider.options.orientation === \"horizontal\" ) ?\n                    \"left: \" + percent :\n                    \"bottom: \" + percent;\n\n\n                // add this current pip to the collection\n                return \"<span class=\\\"\" + classes + \"\\\" style=\\\"\" + css + \"\\\">\" +\n                            \"<span class=\\\"ui-slider-line\\\"></span>\" +\n                            \"<span class=\\\"ui-slider-label\\\" data-value=\\\"\" +\n                                labelValue + \"\\\">\" + options.formatLabel(label) + \"</span>\" +\n                        \"</span>\";\n\n            }\n\n            // create our first pip\n            collection += createPip(\"first\");\n\n            // for every stop in the slider where we need a pip; create one.\n            for ( p = slider.options.pipStep; p < pips; p += slider.options.pipStep ) {\n                collection += createPip( p );\n            }\n\n            // create our last pip\n            collection += createPip(\"last\");\n\n            // append the collection of pips.\n            slider.element.append( collection );\n\n            // store the pips for setting classes later.\n            $pips = slider.element.find(\".ui-slider-pip\");\n\n\n\n            // store the mousedown handlers for later, just in case we reset\n            // the slider, the handler would be lost!\n\n            if ( $._data( slider.element.get(0), \"events\").mousedown &&\n                $._data( slider.element.get(0), \"events\").mousedown.length ) {\n\n                mousedownHandlers = $._data( slider.element.get(0), \"events\").mousedown;\n\n            } else {\n\n                mousedownHandlers = slider.element.data(\"mousedown-handlers\");\n\n            }\n\n            slider.element.data(\"mousedown-handlers\", mousedownHandlers.slice() );\n\n            // loop through all the mousedown handlers on the slider,\n            // and store the original namespaced (.slider) event handler so\n            // we can trigger it later.\n            for ( j = 0; j < mousedownHandlers.length; j++ ) {\n                if ( mousedownHandlers[j].namespace === \"slider\" ) {\n                    slider.element.data(\"mousedown-original\", mousedownHandlers[j].handler );\n                }\n            }\n\n            // unbind the mousedown.slider event, because it interferes with\n            // the labelClick() method (stops smooth animation), and decide\n            // if we want to trigger the original event based on which element\n            // was clicked.\n            slider.element\n                .off(\"mousedown.slider\")\n                .on(\"mousedown.selectPip\", function(e) {\n\n                    var $target = $(e.target),\n                        closest = getClosestHandle( $target.data(\"value\") ),\n                        $handle = $handles.eq( closest );\n\n                    $handle.addClass(\"ui-state-active\");\n\n                    if ( $target.is(\".ui-slider-label\") ) {\n\n                        labelClick( $target, e );\n\n                        slider.element\n                            .one(\"mouseup.selectPip\", function() {\n\n                                $handle\n                                    .removeClass(\"ui-state-active\")\n                                    .focus();\n\n                            });\n\n                    } else {\n\n                        var originalMousedown = slider.element.data(\"mousedown-original\");\n                        originalMousedown(e);\n\n                    }\n\n                });\n\n\n\n\n            slider.element.on( \"slide.selectPip slidechange.selectPip\", function(e, ui) {\n\n                var $slider = $(this),\n                    value = $slider.slider(\"value\"),\n                    values = $slider.slider(\"values\");\n\n                if ( ui ) {\n\n                    value = ui.value;\n                    values = ui.values;\n\n                }\n\n                if ( slider.values() && slider.values().length ) {\n\n                    selectPip.range( values );\n\n                } else {\n\n                    selectPip.single( value );\n\n                }\n\n            });\n\n\n\n\n        },\n\n\n\n\n\n\n\n\n        // floats\n\n        float: function( settings ) {\n\n            var i,\n                slider = this,\n                min = slider._valueMin(),\n                max = slider._valueMax(),\n                value = slider._value(),\n                values = slider._values(),\n                tipValues = [],\n                $handles = slider.element.find(\".ui-slider-handle\");\n\n            var options = {\n\n                handle: true,\n                /* false */\n\n                pips: false,\n                /* true */\n\n                labels: false,\n                /* [array], { first: \"string\", rest: [array], last: \"string\" }, false */\n\n                prefix: \"\",\n                /* \"\", string */\n\n                suffix: \"\",\n                /* \"\", string */\n\n                event: \"slidechange slide\",\n                /* \"slidechange\", \"slide\", \"slidechange slide\" */\n\n                formatLabel: function(value) {\n                    return this.prefix + value + this.suffix;\n                }\n                /* function\n                    must return a value to display in the floats */\n\n            };\n\n            if ( $.type( settings ) === \"object\" || $.type( settings ) === \"undefined\" ) {\n\n                $.extend( options, settings );\n                slider.element.data(\"float-options\", options );\n\n            } else {\n\n                if ( settings === \"destroy\" ) {\n\n                    destroy();\n\n                } else if ( settings === \"refresh\" ) {\n\n                    slider.element.slider( \"float\", slider.element.data(\"float-options\") );\n\n                }\n\n                return;\n\n            }\n\n\n\n\n            if ( value < min ) {\n                value = min;\n            }\n\n            if ( value > max ) {\n                value = max;\n            }\n\n            if ( values && values.length ) {\n\n                for ( i = 0; i < values.length; i++ ) {\n\n                    if ( values[i] < min ) {\n                        values[i] = min;\n                    }\n\n                    if ( values[i] > max ) {\n                        values[i] = max;\n                    }\n\n                }\n\n            }\n\n            // add a class for the CSS\n            slider.element\n                .addClass(\"ui-slider-float\")\n                .find(\".ui-slider-tip, .ui-slider-tip-label\")\n                .remove();\n\n\n\n            function destroy() {\n\n                slider.element\n                    .off(\".sliderFloat\")\n                    .removeClass(\"ui-slider-float\")\n                    .find(\".ui-slider-tip, .ui-slider-tip-label\")\n                    .remove();\n\n            }\n\n\n            function getPipLabels( values ) {\n\n                // when checking the array we need to divide\n                // by the step option, so we store those values here.\n\n                var vals = [],\n                    steppedVals = $.map( values, function(v) {\n                        return Math.ceil(( v - min ) / slider.options.step);\n                    });\n\n                // now we just get the values we need to return\n                // by looping through the values array and assigning the\n                // label if it exists.\n\n                if ( $.type( options.labels ) === \"array\" ) {\n\n                    for ( i = 0; i < values.length; i++ ) {\n\n                        vals[i] = options.labels[ steppedVals[i] ] || values[i];\n\n                    }\n\n                } else if ( $.type( options.labels ) === \"object\" ) {\n\n                    for ( i = 0; i < values.length; i++ ) {\n\n                        if ( values[i] === min ) {\n\n                            vals[i] = options.labels.first || min;\n\n                        } else if ( values[i] === max ) {\n\n                            vals[i] = options.labels.last || max;\n\n                        } else if ( $.type( options.labels.rest ) === \"array\" ) {\n\n                            vals[i] = options.labels.rest[ steppedVals[i] - 1 ] || values[i];\n\n                        } else {\n\n                            vals[i] = values[i];\n\n                        }\n\n                    }\n\n                } else {\n\n                    for ( i = 0; i < values.length; i++ ) {\n\n                        vals[i] = values[i];\n\n                    }\n\n                }\n\n                return vals;\n\n            }\n\n            // apply handle tip if settings allows.\n            if ( options.handle ) {\n\n                // we need to set the human-readable label to either the\n                // corresponding element in the array, or the appropriate\n                // item in the object... or an empty string.\n\n                tipValues = ( slider.values() && slider.values().length ) ?\n                    getPipLabels( values ) :\n                    getPipLabels( [ value ] );\n\n                for ( i = 0; i < tipValues.length; i++ ) {\n\n                    $handles\n                        .eq( i )\n                        .append( $(\"<span class=\\\"ui-slider-tip\\\">\"+ options.formatLabel(tipValues[i]) +\"</span>\") );\n\n                }\n\n            }\n\n            if ( options.pips ) {\n\n                // if this slider also has pip-labels, we make those into tips, too.\n                slider.element.find(\".ui-slider-label\").each(function(k, v) {\n\n                    var $this = $(v),\n                        val = [ $this.data(\"value\") ],\n                        label,\n                        $tip;\n\n\n                    label = options.formatLabel( getPipLabels( val )[0] );\n\n                    // create a tip element\n                    $tip =\n                        $(\"<span class=\\\"ui-slider-tip-label\\\">\" + label + \"</span>\")\n                            .insertAfter( $this );\n\n                });\n\n            }\n\n            // check that the event option is actually valid against our\n            // own list of the slider's events.\n            if ( options.event !== \"slide\" &&\n                options.event !== \"slidechange\" &&\n                options.event !== \"slide slidechange\" &&\n                options.event !== \"slidechange slide\" ) {\n\n                options.event = \"slidechange slide\";\n\n            }\n\n            // when slider changes, update handle tip label.\n            slider.element\n                .off(\".sliderFloat\")\n                .on( options.event + \".sliderFloat\", function( e, ui ) {\n\n                    var uiValue = ( $.type( ui.value ) === \"array\" ) ? ui.value : [ ui.value ],\n                        val = options.formatLabel( getPipLabels( uiValue )[0] );\n\n                    $(ui.handle)\n                        .find(\".ui-slider-tip\")\n                        .html( val );\n\n                });\n\n        }\n\n    };\n\n    $.extend(true, $.ui.slider.prototype, extensionMethods);\n\n})(jQuery);\n"],"sourceRoot":"/source/"}
>>>>>>> develop
